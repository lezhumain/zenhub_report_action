name: Continuous Integration

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  test-typescript:
    name: TypeScript Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: npm

      - name: Install Dependencies
        id: npm-ci
        run: npm ci

      - name: Check Format
        id: npm-format-check
        run: npm run format:check

      - name: Lint
        id: npm-lint
        run: npm run lint

      - name: Test
        id: npm-ci-test
        run: npm run ci-test

  test-action:
    name: GitHub Actions Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: "${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}"
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

#      - name: Install
#        id: install
#        run: npm ci
#
#      - name: Build webpack
#        id: build-webpack
#        #run: pwd && ls -alh src && ls -alh src/zenhub_reports && cd src/zenhub_reports/ && npx webpack && jq -r .pull_request.body <<< "$INPUT_GHEVENT"
#        run: echo "$REPO_ID"
#        env:
#          REPO_ID: ${{ github.event.repository.id }}

      - name: Test Local Action
        id: test-action
        uses: ./
        env:
          API_KEY: ${{ secrets.ZH_TOKEN }}
          #GH_API_KEY: ${{ github.token }}
          #REPO_ID: ${{ github.event.repository.id }}
          WORKSPACE_ID: "5e3018c2d1715f5725d0b8c7"

#      - name: Print Output
#        id: output
#        run: |
#          echo "===="
#          echo "${{ steps.test-action.outputs.markdownContent }}"
#          echo "===="
#          echo " $RES"
#        env:
#          RES: ${{ steps.test-action.outputs.markdownContent }}

      - name: Print Output
        id: output
        run: |
          TARGET="zenhub_report.md"
          if [ ! -f "$TARGET" ]; then
            echo "markdown file was not generated"
            exit 1
          fi
          CONTENT="$(cat "$TARGET")"
          if [ -z "$CONTENT" ]; then
            echo "markdown file empty"
            exit 1
          fi
          echo "$CONTENT"
          ls -aldh "$TARGET"

      - name: Create issue
        uses: peter-evans/create-issue-from-file@v5
        with:
          title: Monthly zenhub metrics report
          content-filepath: ./zenhub_report.md
          assignees: ""
          labels: |
            report
          token: ${{ secrets.GH_TOKEN }}